// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Teacher {
//   id        String   @id @default(uuid())
//   name      String   @unique
//   email     String   @unique
//   password  String   @unique
//   class     Class?
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("teachers")
// }

// model Student {
//   id        String   @id @default(uuid())
//   name      String   @unique
//   email     String   @unique
//   password  String   @unique
//   class     Class?   @relation(fields: [classId], references: [id])
//   classId   Int?
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("students")
// }

// model Class {
//   id        Int       @id @default(autoincrement())
//   teacher   Teacher   @relation(fields: [teacherId], references: [id])
//   teacherId String    @unique
//   students  Student[]
//   createdAt DateTime  @default(now())
//   updatedAt DateTime  @updatedAt

//   @@map("classes")
// }

model User {
  id                String   @id @default(uuid())
  name              String
  email             String   @unique
  password          String   @unique
  role              Role     @default(student)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  owned_classes     Class[]  @relation("OwnerTeacher")
  owned_classes_ids Int?
  joined_class      Class?   @relation(fields: [joined_class_id], references: [id])
  joined_class_id   Int?

  @@map("users")
}

model Class {
  id        Int    @id @default(autoincrement())
  name      String @unique
  teacher   User   @relation("OwnerTeacher", fields: [teacherId], references: [id])
  teacherId String
  students  User[]

  @@index([name])
  @@map("classes")
}

enum Role {
  student
  teacher
}
